.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  color: hsl(var(--muted-foreground));
  opacity: 0.5;
  float: left;
  pointer-events: none;
  height: 0;
}

/* List */
.ProseMirror ul {
  @apply list-disc pl-6 space-y-1 marker:text-muted-foreground;
}

.ProseMirror ul li::marker {
  @apply text-sm;
}

.ProseMirror ol {
  @apply list-decimal pl-6;
}

/* Code block */
.ProseMirror pre {
  @apply bg-muted text-foreground px-4 py-3 font-mono;
}

.ProseMirror pre code {
  @apply text-sm;
}

.ProseMirror p code {
  @apply bg-muted px-1 py-0.5 rounded text-sm font-mono;
}

/* Blockquote */
.ProseMirror blockquote {
  @apply border-l-2 border-primary bg-accent/30 px-4;
}

/* Highlight */
.ProseMirror mark {
  @apply bg-muted text-foreground;
}

/* ==================
  Task List 
================== */
/* Task List Container */
.ProseMirror ul[data-type="taskList"] {
  @apply list-none p-0 m-0;
}

/* Task Item Container */
.ProseMirror ul[data-type="taskList"] li {
  @apply flex flex-grow !my-0 [&_p]:m-0 items-center space-x-2 p-0;
}

/* Checkbox */
.ProseMirror ul[data-type="taskList"] li > label {
  @apply flex items-center gap-2 cursor-pointer select-none;
}

/* Hide default checkbox appearance */
.ProseMirror ul[data-type="taskList"] li input[type="checkbox"] {
  @apply size-4 rounded border-muted bg-background text-primary;
}

/* Checked item text style */
.ProseMirror ul[data-type="taskList"] li[data-checked="true"] > div {
  @apply text-muted-foreground;
}
